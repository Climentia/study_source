import pandas as pd
import matplotlib.pyplot as plt


parameter_list = [[1, 1000, 1], [1, 1000, 5], [0.01, 1000, 1], [0.01, 1000, 5]]
mesh_range = 0.02
df_1_10_p1 = pd.read_csv('./change_error/change_error_lambda_1_iterate_10_p1_25.csv')
df_1_1000_p1 = pd.read_csv('./change_error/change_error_lambda_1_iterate_1000_p1_25.csv')
df_1_1000_p5 = pd.read_csv('./change_error/change_error_lambda_1_iterate_1000_p5_25.csv')
df_01_1000_p5 = pd.read_csv('./change_error/change_error_lambda_0.1_iterate_1000_p5_25.csv')
df_001_1000_p5 = pd.read_csv('./change_error/change_error_lambda_0.01_iterate_1000_p5_25.csv')
df_005_1000_p5 = pd.read_csv('./change_error/change_error_lambda_0.05_iterate_1000_p5_25.csv')
df_0001_1000_p5 = pd.read_csv('./change_error/change_error_lambda_0.001_iterate_1000_p5_25.csv')
df_0005_1000_p5 = pd.read_csv('./change_error/change_error_lambda_0.005_iterate_1000_p5_25.csv')
df_persist_nv = pd.read_csv('./change_error/change_error_persist_nv_25.csv')
print(df_persist_nv.dtypes)
df_all = pd.merge(df_persist_nv, df_1_10_p1, on=['id', 'year', 'month', 'day', 'time'], how='outer')
df_all = pd.merge(df_all, df_1_1000_p1, on=['id', 'year', 'month', 'day', 'time'], how='outer')
df_all = pd.merge(df_all, df_1_1000_p5, on=['id', 'year', 'month', 'day', 'time'], how='outer')
df_all = pd.merge(df_all, df_01_1000_p5, on=['id', 'year', 'month', 'day', 'time'], how='outer')
df_all = pd.merge(df_all, df_005_1000_p5, on=['id', 'year', 'month', 'day', 'time'], how='outer')
df_all = pd.merge(df_all, df_001_1000_p5, on=['id', 'year', 'month', 'day', 'time'], how='outer')
df_all = pd.merge(df_all, df_0005_1000_p5, on=['id', 'year', 'month', 'day', 'time'], how='outer')
df_all = df_all[(df_all['time']>9.5) & (df_all['time']<15.0)]
df_all = df_all.drop_duplicates(subset=('id', 'year', 'month', 'day', 'time'))
df_all.to_csv('test.csv', index=False)
df_all = df_all.dropna()
df_all = df_all.drop('year', axis=1)
df_all = df_all.drop('month', axis=1)
df_all = df_all.drop('day', axis=1)
df_all = df_all.drop('time', axis=1)
# print(df_all)
count_df = df_all['id'].count()
cl_list = list(df_all.columns)
fig, ax = plt.subplots()
plt.ylabel('Abusolute Error[%]')
plt.title('Box plot Abusolute_error_distribution(changetime)' + '     Number of data:' + str(count_df))
# boxplot = df_all.boxplot(column=cl_list[1:], whis="range", showmeans=True, fontsize=8)
boxplot = df_all.boxplot(column=cl_list[1:], whis=[0, 100], showmeans=True, fontsize=8, notch=True)
plt.ylim(-5, 100)
plt.show()
